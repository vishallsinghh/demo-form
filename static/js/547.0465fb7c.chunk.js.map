{"version":3,"file":"static/js/547.0465fb7c.chunk.js","mappings":"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","sources":["components/Home/index.js"],"sourcesContent":["import {\n  Box,\n  Button,\n  Flex,\n  Input,\n  Heading,\n  HStack,\n  Spacer,\n  Text,\n  VStack,\n  Link,\n  Image,\n  Img,\n  Select,\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  FormErrorMessage,\n  UnorderedList,\n  ListItem,\n  OrderedList,\n} from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport './style.css'\nimport axios from 'axios'\n\nconst Home = ({ scrollTo, LiveDemoRef }) => {\n  const [dash, getDashboard] = useState([])\n  const [email, setEmail] = useState('')\n  const [dashType, setDashType] = useState('')\n  const [connectorUrl, setConnectorUrl] = useState('')\n  const [accessToken, setAccessToken] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [isValid, setIsValid] = useState(true)\n\n  useEffect(() => {\n    getAllDashboards()\n  }, [])\n\n  // const baseUrl = 'https://odoo.techneith.com'\n  const getAllDashboards = () => {\n    const url = 'https://odoo.techneith.com/techneith/dashboards/'\n    axios.get(`${url}`).then(response => {\n      const allDashboard = response.data\n\n      getDashboard(allDashboard)\n    })\n  }\n\n  const formSubmission = async () => {\n    const formData = {\n      //used to send data in formData which is being received in the- form api\n      staging_url: connectorUrl,\n      token: accessToken,\n      email: email,\n      dashboard: dashType,\n    }\n\n    var postData = new FormData()\n    postData.append('staging_url', formData.staging_url)\n    postData.append('token', formData.token)\n    postData.append('email', formData.email)\n    postData.append('dashboard', formData.dashboard)\n\n    try {\n      const res = await fetch(\n        'https://odoo.techneith.com/request/dashboard-demo/',\n        {\n          method: 'POST',\n          mode: 'cors',\n          body: postData,\n        },\n      )\n\n      const response = res.json()\n      console.log('Final Response: ', response)\n      setIsLoading(false)\n    } catch (error) {\n      console.log('Error: ', error)\n    }\n  }\n\n  const checkValidation = async event => {\n    event.preventDefault() //to not to refresh or redirecting to new page\n    setIsLoading(true) //\n    const values = {\n      url: connectorUrl,\n      dashType: dashType,\n      token: accessToken,\n      email: email,\n    }\n\n    const validationData = {\n      url: connectorUrl,\n      token: accessToken,\n    }\n    var bodyFormData = new FormData()\n    bodyFormData.append('url', validationData.url)\n    bodyFormData.append('token', validationData.token)\n    try {\n      const res = await fetch('https://odoo.techneith.com/authorize/customer', {\n        method: 'POST',\n        mode: 'cors',\n        body: bodyFormData,\n      })\n\n      const response = await res.json()\n      console.log('Response1: ', response)\n      setIsLoading(false)\n      setIsValid(true)\n      console.log('isvalid:', isValid)\n      if (response.success) {\n        console.log('Success, waiting call for formSubmission')\n\n        await formSubmission()\n      } else {\n        setIsValid(false)\n      }\n    } catch (error) {\n      setIsValid(false)\n      console.log(error)\n    }\n\n    // axios\n    //   .post(url, {\n    //     url: 'https://development.techneith.com/power-bi/connecter/',\n    //     token: '_4288c4201a6a7f2d0bc74d08745c58c7c9769cc0',\n    //   })\n    //   .then(\n    //     response => {\n    //       console.log('Response: ', response.data)\n    //     },\n    //     error => {\n    //       console.log('Error: ', error)\n    //     },\n    //   )\n    console.log('Form Values: ', values)\n    //\n  }\n\n  return (\n    <Flex\n      h={{ base: '1100', sm: '1100', md: '1100px', lg: '900px' }}\n      w=\"100%\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      px={{ base: '5', md: '10', lg: '100px', xl: '10%' }}\n      position=\"relative\"\n    >\n      <Flex\n        h=\"full\"\n        flexDirection={{\n          base: 'column',\n          md: 'column',\n          lg: 'column',\n          xl: 'row',\n        }}\n        w={{ base: 'full', md: 'full', lg: 'full', xl: '90%' }}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        pt=\"20\"\n      >\n        <Box\n          position=\"relative\"\n          display=\"flex\"\n          alignItems=\"start\"\n          justifyContent={{ base: 'center', xl: 'start' }}\n          w={{ base: 'full', md: 'full', lg: 'full', xl: '50%' }}\n          h={{ base: 'full', md: 'full', lg: 'full' }}\n          pt={{ base: '20' }}\n          pr={{ base: '5', md: '0' }}\n        >\n          <VStack\n            bg=\"none\"\n            w={{ base: '310px', md: '510px', lg: '490px', xl: '590px' }}\n            h={{ base: '180px', md: '350px', lg: '300px', xl: '280px' }}\n            spacing=\"none\"\n            borderRadius=\"5px\"\n          >\n            <Box bg=\"none\" w=\"full\" h=\"full\" borderRadius=\"0 0 5px 5px\">\n              <Img src=\"https://user-images.githubusercontent.com/68636367/202851767-11008859-b92f-4c1a-a3b7-5f1ea664ccbd.gif\" />\n            </Box>\n          </VStack>\n        </Box>\n        <Spacer />\n        <VStack\n          alignItems={{ base: 'center', xl: 'center' }}\n          justifyContent={{ base: 'end', xl: 'center' }}\n          w={{ base: 'full', md: 'full', lg: 'full', xl: '50%' }}\n          h={{ base: 'full', md: 'full', lg: 'full' }}\n          p=\"6\"\n        >\n          <Heading\n            as=\"h1\"\n            fontSize={{ base: '2xl', md: '3xl', lg: '3xl' }}\n            align=\"center\"\n          >\n            Test Sales Dashboard\n          </Heading>\n          <Heading\n            as=\"h2\"\n            fontSize={{ base: 'lg', md: 'xl', lg: '2xl' }}\n            fontWeight=\"small\"\n            align=\"center\"\n          >\n            Request Live Demo on your Odoo data\n          </Heading>\n          <form onSubmit={checkValidation}>\n            <FormControl>\n              <VStack\n                alignItems={{ base: 'center', md: 'end', lg: 'center' }}\n                justifyContent={{ base: 'center', xl: 'center' }}\n                w={{ base: 'full', md: 'full', lg: 'full', xl: '100%' }}\n                h={{ base: '60%', md: '50%', lg: 'full' }}\n                pt=\"6\"\n                spacing=\"4\"\n              >\n                <Input\n                  variant=\"filled\"\n                  placeholder=\"Your Email\"\n                  type=\"email\"\n                  onChange={event => setEmail(event.currentTarget.value)}\n                  isRequired\n                />\n\n                <Select\n                  variant=\"filled\"\n                  placeholder=\"Select Dashboard\"\n                  onChange={event => setDashType(event.currentTarget.value)}\n                  isRequired\n                  mt=\"5\"\n                >\n                  {dash.map(dashboard => (\n                    <option value={dashboard.id} key={dashboard.id}>\n                      {dashboard.name}\n                    </option>\n                  ))}\n                </Select>\n\n                <Input\n                  variant=\"filled\"\n                  placeholder=\"Connector Url from Power-bi Direct Connector settings\"\n                  onChange={event => setConnectorUrl(event.currentTarget.value)}\n                  isRequired\n                />\n                <Input\n                  variant=\"filled\"\n                  placeholder=\"Access Token from Power-bi Direct Connector settings\"\n                  onChange={event => setAccessToken(event.currentTarget.value)}\n                  required\n                />\n\n                {isValid ? (\n                  <FormHelperText>Enter the details for demo.</FormHelperText>\n                ) : (\n                  <Text color=\"red.500\">*Invalid Url or Token</Text>\n                )}\n                <Button\n                  className=\"buttonSubmit\"\n                  px=\"4\"\n                  colorScheme=\"blue\"\n                  m=\"6px\"\n                  isDisabled={isLoading}\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n                <OrderedList pt=\"10\">\n                  <ListItem>\n                    Enter the Url and Token from your\n                    <b>Power-Bi Direct Connector</b>\n                    settings in Odoo\n                  </ListItem>\n                  <ListItem>\n                    We will send Your Demo Dashboard Url to mentioned email\n                    within one working day\n                  </ListItem>\n                  <ListItem>\n                    Advised to regenerate connector token after the demo expires\n                  </ListItem>\n                  <ListItem>\n                    This demo only works with\n                    <b>Techneith's Power-Bi Direct Connector</b> because it is\n                    only direct connector available from odoo to power-bi\n                  </ListItem>\n                  <ListItem>\n                    For Power-BI Dashboards development and customizations\n                    contact us on <b>info@techneith.com</b>\n                  </ListItem>\n                </OrderedList>\n              </VStack>\n            </FormControl>\n          </form>\n        </VStack>\n      </Flex>\n    </Flex>\n  )\n}\nexport default Home\n"],"names":["scrollTo","LiveDemoRef","useState","dash","getDashboard","email","setEmail","dashType","setDashType","connectorUrl","setConnectorUrl","accessToken","setAccessToken","isLoading","setIsLoading","isValid","setIsValid","useEffect","getAllDashboards","axios","then","response","allDashboard","data","formSubmission","formData","staging_url","token","dashboard","postData","FormData","append","fetch","method","mode","body","res","json","console","log","checkValidation","event","preventDefault","values","url","validationData","bodyFormData","success","h","base","sm","md","lg","w","justifyContent","alignItems","px","xl","position","flexDirection","pt","display","pr","bg","spacing","borderRadius","src","p","as","fontSize","align","fontWeight","onSubmit","variant","placeholder","type","onChange","currentTarget","value","isRequired","mt","map","id","name","required","color","className","colorScheme","m","isDisabled"],"sourceRoot":""}